{"version":3,"sources":["components/carousel/GlideComponent.js","views/home.js"],"names":["resizeTimeOut","mountTimeOut","GlideComponent","props","onResize","bind","renderDots","this","initGlide","destroyGlide","clearTimeout","setTimeout","glideCarousel","update","Glide","carousel","settings","direction","getDirection","mount","on","event","document","createEvent","initEvent","window","dispatchEvent","destroy","total","React","Children","count","children","dots","i","push","type","className","key","data-glide-dir","ref","node","data-glide-el","hideNav","Component","defaultProps","Home","image","position","to","style","height","width","src"],"mappings":"wOAMIA,G,QAAiB,GACjBC,GAAgB,EAEdC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAHD,E,gEAOjBE,KAAKC,c,2CAILD,KAAKE,eACLF,KAAKC,c,6CAILD,KAAKE,iB,iCAGK,IAAD,OACTC,aAAaV,GACbA,EAAgBW,YAAW,WACzB,EAAKC,cAAcC,SACnBb,GAAiB,IAChB,O,kCAIHO,KAAKK,cAAgB,IAAIE,IAAMP,KAAKQ,SAAf,2BAChBR,KAAKJ,MAAMa,UADK,IAEnBC,UAAWC,cAAeD,aAE5BV,KAAKK,cAAcO,QACnBZ,KAAKK,cAAcQ,GAAG,SAAUb,KAAKH,UACrCH,EAAeU,YAAW,WACxB,IAAMU,EAAQC,SAASC,YAAY,cACnCF,EAAMG,UAAU,UAAU,GAAO,GACjCC,OAAOC,cAAcL,KACpB,O,qCAIHX,aAAaV,GACbU,aAAaT,GACTM,KAAKK,eACPL,KAAKK,cAAce,Y,mCAOrB,IAFA,IAAMC,EAAQC,IAAMC,SAASC,MAAMxB,KAAKJ,MAAM6B,UACxCC,EAAO,GACJC,EAAI,EAAGA,EAAIN,EAAOM,IACzBD,EAAKE,KACH,4BACEC,KAAK,SACLC,UAAU,2BACVC,IAAKJ,EACLK,iBAAA,WAAoBL,MAI1B,OAAOD,I,+BAGC,IAAD,OACP,OACE,6BACE,yBAAKI,UAAU,QAAQG,IAAK,SAACC,GAAD,OAAW,EAAK1B,SAAW0B,IACrD,yBAAKC,gBAAc,QAAQL,UAAU,gBACnC,yBAAKA,UAAU,iBAAiB9B,KAAKJ,MAAM6B,YAE3CzB,KAAKJ,MAAMa,SAAS2B,SACpB,yBAAKN,UAAU,2BAA2BK,gBAAc,YACtD,4BACEN,KAAK,SACLC,UAAU,0DACVE,iBAAe,KAEf,uBAAGF,UAAU,4BAGf,yBACEA,UAAU,sCACVK,gBAAc,iBAEbnC,KAAKD,cAGR,4BACE8B,KAAK,SACLC,UAAU,4DACVE,iBAAe,KAEf,uBAAGF,UAAU,oC,GA/FAR,IAAMe,WAyGnC1C,EAAe2C,aAAe,CAC5B7B,SAAU,I,cC1FG8B,UAbF,WACX,IAAMC,EAAM,CACVC,SAAU,YAEZ,OACE,kBAAC,IAAD,CAASC,GAAG,gBACV,yBAAKC,MAAOH,GACV,yBAAKG,MAAOH,EAAOI,OAAO,OAAOC,MAAM,OAAOC,IAAI","file":"static/js/views.7a29f58e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Glide from '@glidejs/glide';\nimport { getDirection } from '../../helpers/Utils';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\n\nlet resizeTimeOut = -1;\nlet mountTimeOut = -1;\n\nclass GlideComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onResize = this.onResize.bind(this);\n    this.renderDots = this.renderDots.bind(this);\n  }\n\n  componentDidMount() {\n    this.initGlide();\n  }\n\n  componentDidUpdate() {\n    this.destroyGlide();\n    this.initGlide();\n  }\n\n  componentWillUnmount() {\n    this.destroyGlide();\n  }\n\n  onResize() {\n    clearTimeout(resizeTimeOut);\n    resizeTimeOut = setTimeout(() => {\n      this.glideCarousel.update();\n      resizeTimeOut = -1;\n    }, 500);\n  }\n\n  initGlide() {\n    this.glideCarousel = new Glide(this.carousel, {\n      ...this.props.settings,\n      direction: getDirection().direction,\n    });\n    this.glideCarousel.mount();\n    this.glideCarousel.on('resize', this.onResize);\n    mountTimeOut = setTimeout(() => {\n      const event = document.createEvent('HTMLEvents');\n      event.initEvent('resize', false, false);\n      window.dispatchEvent(event);\n    }, 500);\n  }\n\n  destroyGlide() {\n    clearTimeout(resizeTimeOut);\n    clearTimeout(mountTimeOut);\n    if (this.glideCarousel) {\n      this.glideCarousel.destroy();\n    }\n  }\n\n  renderDots() {\n    const total = React.Children.count(this.props.children);\n    const dots = [];\n    for (let i = 0; i < total; i++) {\n      dots.push(\n        <button\n          type=\"button\"\n          className=\"glide__bullet slider-dot\"\n          key={i}\n          data-glide-dir={`=${i}`}\n        />\n      );\n    }\n    return dots;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"glide\" ref={(node) => (this.carousel = node)}>\n          <div data-glide-el=\"track\" className=\"glide__track\">\n            <div className=\"glide__slides\">{this.props.children}</div>\n          </div>\n          {!this.props.settings.hideNav && (\n            <div className=\"glide__arrows slider-nav\" data-glide-el=\"controls\">\n              <button\n                type=\"button\"\n                className=\"glide__arrow glide__arrow--left left-arrow btn btn-link\"\n                data-glide-dir=\"<\"\n              >\n                <i className=\"simple-icon-arrow-left\" />\n              </button>\n\n              <div\n                className=\"glide__bullets slider-dot-container\"\n                data-glide-el=\"controls[nav]\"\n              >\n                {this.renderDots()}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"glide__arrow glide__arrow--right right-arrow btn btn-link\"\n                data-glide-dir=\">\"\n              >\n                <i className=\"simple-icon-arrow-right\" />\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nGlideComponent.defaultProps = {\n  settings: {},\n};\n\nGlideComponent.propTypes = {\n  settings: PropTypes.shape({\n    type: PropTypes.string,\n    startAt: PropTypes.number,\n    perView: PropTypes.number,\n    focusAt: PropTypes.oneOf([PropTypes.number, PropTypes.string]),\n    gap: PropTypes.number,\n    autoplay: PropTypes.bool,\n    hoverpause: PropTypes.bool,\n    keyboard: PropTypes.bool,\n    bound: PropTypes.bool,\n    swipeThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    dragThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    perTouch: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    touchRatio: PropTypes.number,\n    touchAngle: PropTypes.number,\n    animationDuration: PropTypes.number,\n    rewind: PropTypes.bool,\n    rewindDuration: PropTypes.number,\n    animationTimingFunc: PropTypes.string,\n    direction: PropTypes.string,\n    peek: PropTypes.object,\n    breakpoints: PropTypes.object,\n    classes: PropTypes.object,\n    throttle: PropTypes.number,\n  }),\n  // id: PropTypes.string,\n  // className: PropTypes.string,\n};\n\nexport default GlideComponent;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  buyUrl,\n  adminRoot\n} from '../constants/defaultValues';\nimport { NavLink } from 'react-router-dom';\nimport { Nav, NavItem, TabContent, TabPane } from 'reactstrap';\nimport classnames from 'classnames';\nimport GlideComponent from '../components/carousel/GlideComponent';\nimport { scroller } from 'react-scroll'\nimport Headroom from 'react-headroom'\n\nconst Home = () => {\n  const image={\n    position: \"relative\"\n  }\n  return (\n    <NavLink to='./user/login'>\n      <div style={image}>\n        <img style={image} height=\"100%\" width=\"100%\" src=\"https://ficci-capam.framez.sg/static/media/beforelogin.7768c518.jpg\" />\n      </div>\n    </NavLink>\n  )\n};\n\nexport default Home;\n"],"sourceRoot":""}