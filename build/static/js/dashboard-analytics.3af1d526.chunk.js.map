{"version":3,"sources":["components/common/CustomBootstrap.js","containers/navs/Breadcrumb.js","views/app/dashboards/analytics.js"],"names":["Colxx","props","widths","Separator","className","BreadcrumbItems","paths","match","path","substr","split","length","indexOf","filter","x","BreadcrumbContainer","heading","id","injectIntl","intl","useState","showSlido","setSlidoshow","vid","display","transform","position","top","left","slido","justifyContent","alignItems","width","height","logo","style","src","video","autoplay","onClick"],"mappings":"iHAAA,iGAGMA,EAAQ,SAACC,GAAD,OACZ,kBAAC,IAAD,iBAASA,EAAT,CAAgBC,OAAQ,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,WAE1DC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAChB,yBAAKA,UAAS,oBAAeA,O,iCCP/B,sCA6BMC,GA7BN,KA6BwB,SAAC,GAAe,IAElCC,EAFiC,EAAZC,MACNC,KAAKC,OAAO,GACdC,MAAM,KAIvB,OAHIJ,EAAMA,EAAMK,OAAS,GAAGC,QAAQ,MAAQ,IAC1CN,EAAQA,EAAMO,QAAO,SAACC,GAAD,OAA2B,IAApBA,EAAEF,QAAQ,SAGtC,oCACE,kBAAC,IAAD,CAAYR,UAAU,qEAmBbW,IAxCa,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAAST,EAAY,EAAZA,MACtC,OACE,oCACGS,GACC,4BACE,kBAAC,IAAD,CAAcC,GAAID,KAGtB,kBAACX,EAAD,CAAiBE,MAAOA,O,uGCuBfW,uBAvCY,SAAC,GAAoB,EAAlBC,KAAkB,EAAZZ,MAAa,IAAD,EACfa,mBAAS,QADM,mBACvCC,EADuC,KAC7BC,EAD6B,KAKvCC,EAAI,CACRC,QAAS,QAASC,UAAU,QAAD,OAAS,EAAT,QAAkB,EAAlB,QAA0BC,SAAU,WAChDC,IAAK,SAASC,KAAM,OAEjCC,EAAM,CACRL,QAAQH,EAAWS,eAAgB,SAAUC,WAAY,SAC1CN,UAAU,QAAD,OAAS,EAAT,QAAkB,EAAlB,QAA0BC,SAAU,WAC7CM,MAAO,QAASC,OAAQ,QACxBN,IAAK,QAAQC,KAAM,UAE/BM,EAAK,CACTV,QAAS,OAAQM,eAAgB,SAAUC,WAAY,SACvCN,UAAU,QAAD,OAAS,EAAT,QAAkB,EAAlB,QAA0BC,SAAU,WAC7CM,MAAO,OAAQC,OAAQ,OACvBN,IAAK,MAAMC,KAAM,UAQjC,OACA,6BACC,yBAAKK,OAAO,OAAOD,MAAM,OAAOG,MA3BtB,CACXT,SAAU,YA0BsCU,IAAI,oDAEnD,yBAAKD,MAAOZ,GACV,kBAAC,IAAD,CAAOc,MAAM,YAAYJ,OAAO,QAAQD,MAAM,QAAQM,UAAQ,KAEhE,yBAAKF,IAAI,oCAAoCH,OAAO,OAAOD,MAAM,OAAOG,MAAOD,EAAOK,QAAS,WAX9FjB,EADa,QAAXD,EACW,OAEA,WAUd,4BAAQe,IAAI,uBAAuBH,OAAO,OAAOD,MAAM,OAAOG,MAAON","file":"static/js/dashboard-analytics.3af1d526.chunk.js","sourcesContent":["import React from 'react';\nimport { Col } from 'reactstrap';\n\nconst Colxx = (props) => (\n  <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\n);\nconst Separator = ({ className }) => (\n  <div className={`separator ${className}`} />\n);\nexport { Colxx, Separator };\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if('/'+sub===adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub, index) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {/* {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })} */}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React,{useState} from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Button } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\nimport Vimeo from '@u-wave/react-vimeo';\n\n\nconst DashboardAnalytics = ({ intl, match }) => {\n  const [showSlido,setSlidoshow]=useState(\"none\");\n  const image1={\n    position: \"relative\"\n   }\n   const vid={\n     display: 'block', transform:`skew(${0}deg, ${0}deg)`,position: 'absolute',\n                    top: '-7.98%',left: '45%',\n   }\n   let slido={\n     display:showSlido, justifyContent: 'center', alignItems: 'center',\n                    transform:`skew(${0}deg, ${0}deg)`,position: 'absolute',\n                    width: '500px', height: '600px',\n                    top: '5.11%',left: '61.51%'\n   }\n  const logo={\n    display: 'flex', justifyContent: 'center', alignItems: 'center',\n                    transform:`skew(${0}deg, ${0}deg)`,position: 'absolute',\n                    width: '50px', height: '50px',\n                    top: '83%',left: '94.31%'\n  }\n  const slidoToggle=()=>{\n    if (showSlido==\"flex\")\n      setSlidoshow(\"none\")\n    else\n      setSlidoshow(\"flex\")\n  }\n    return (\n    <div>\n     <img height=\"100%\" width=\"100%\" style={image1} src=\"https://ficci-capam.framez.sg/images/lounge.jpg\" />\n\n     <div style={vid}>\n       <Vimeo video=\"451526648\" height=\"603px\" width=\"260px\" autoplay/>\n     </div>\n     <img src=\"../../../../assets/logos/chat.png\" height=\"100%\" width=\"100%\" style={logo}  onClick={()=>slidoToggle()}/>\n     <iframe src=\"../applications/chat\" height=\"100%\" width=\"100%\" style={slido}/>\n    </div>\n    );\n};\nexport default injectIntl(DashboardAnalytics);\n"],"sourceRoot":""}